export declare const MindTransforms: {
    setLayout: (board: import("@plait/core").PlaitBoard, type: import("@plait/layouts").MindLayoutType) => void;
    setShape: (board: import("@plait/core").PlaitBoard, shape: import("@plait/mind").MindElementShape) => void;
    setBranchShape: (board: import("@plait/core").PlaitBoard, branchShape: import("@plait/mind").BranchShape) => void;
    setBranchWidth: (board: import("@plait/core").PlaitBoard, branchWidth: number) => void;
    setBranchColor: (board: import("@plait/core").PlaitBoard, branchColor: string) => void;
    setTopic: (board: import("@plait/mind").PlaitMindBoard, element: import("@plait/mind").MindElement, topic: import("slate").Element, width: number, height: number) => void;
    setTopicSize: (board: import("@plait/mind").PlaitMindBoard, element: import("@plait/mind").MindElement, width: number, height: number) => void;
    setNodeManualWidth: (board: import("@plait/mind").PlaitMindBoard, element: import("@plait/mind").MindElement, width: number, height: number) => void;
    addEmoji: (board: import("@plait/core").PlaitBoard, element: import("@plait/mind").MindElement, emojiItem: import("@plait/mind").EmojiItem) => void;
    removeEmoji: (board: import("@plait/core").PlaitBoard, element: import("@plait/mind").MindElement<import("@plait/mind").EmojiData>, emojiItem: import("@plait/mind").EmojiItem) => void;
    replaceEmoji: (board: import("@plait/core").PlaitBoard, element: import("@plait/mind").MindElement<import("@plait/mind").EmojiData>, oldEmoji: import("@plait/mind").EmojiItem, newEmoji: import("@plait/mind").EmojiItem) => void;
    insertAbstract: (board: import("@plait/core").PlaitBoard, elements: import("@plait/core").PlaitElement[]) => void;
    setAbstractsByRefs: (board: import("@plait/core").PlaitBoard, abstractRefs: import("@plait/mind").AbstractRefs) => void;
    setAbstractByStandardLayout: (board: import("@plait/core").PlaitBoard, element: import("@plait/mind").MindElement) => void;
    insertNodes: (board: import("@plait/core").PlaitBoard, elements: import("@plait/mind").MindElement[], path: import("slate").Path) => void;
    insertAbstractNodes: (board: import("@plait/core").PlaitBoard, validAbstractRefs: import("@plait/mind").AbstractRef[], elements: import("@plait/mind").MindElement[], path: import("slate").Path) => void;
    setRightNodeCountByRefs: (board: import("@plait/core").PlaitBoard, refs: import("@plait/mind").RightNodeCountRef[]) => void;
    removeImage: (board: import("@plait/core").PlaitBoard, element: import("@plait/mind").MindElement<import("@plait/mind").ImageData>) => void;
    setImage: (board: import("@plait/core").PlaitBoard, element: import("@plait/mind").MindElement, imageItem: import("@plait/common").CommonImageItem) => void;
    insertChildNode: (board: import("@plait/mind").PlaitMindBoard, element: import("@plait/mind").MindElement) => void;
    insertSiblingNode: (board: import("@plait/mind").PlaitMindBoard, element: import("@plait/mind").MindElement) => void;
    insertMind: (board: import("@plait/mind").PlaitMindBoard, mind: import("@plait/mind").MindElement) => void;
};

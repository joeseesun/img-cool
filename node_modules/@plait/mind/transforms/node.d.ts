import { Element, Path } from 'slate';
import { MindElement } from '../interfaces/element';
import { PlaitBoard } from '@plait/core';
import { AbstractRef } from '../utils/abstract/common';
import { RightNodeCountRef } from '../utils/node/right-node-count';
import { PlaitMindBoard } from '../plugins/with-mind.board';
export declare const setTopic: (board: PlaitMindBoard, element: MindElement, topic: Element, width: number, height: number) => void;
export declare const setNodeManualWidth: (board: PlaitMindBoard, element: MindElement, width: number, height: number) => void;
export declare const setTopicSize: (board: PlaitMindBoard, element: MindElement, width: number, height: number) => void;
export declare const insertNodes: (board: PlaitBoard, elements: MindElement[], path: Path) => void;
export declare const insertAbstractNodes: (board: PlaitBoard, validAbstractRefs: AbstractRef[], elements: MindElement[], path: Path) => void;
export declare const setRightNodeCountByRefs: (board: PlaitBoard, refs: RightNodeCountRef[]) => void;
export declare const insertChildNode: (board: PlaitMindBoard, element: MindElement) => void;
export declare const insertSiblingNode: (board: PlaitMindBoard, element: MindElement) => void;
export declare const insertMind: (board: PlaitMindBoard, mind: MindElement) => void;

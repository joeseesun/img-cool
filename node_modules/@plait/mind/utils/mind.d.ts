import { Path, PlaitBoard } from '@plait/core';
import { MindElement } from '../interfaces/element';
import { MindNode } from '../interfaces/node';
import { PlaitMindBoard } from '../plugins/with-mind.board';
export declare const getChildrenCount: (element: MindElement) => number;
export declare const isChildElement: (origin: MindElement, child: MindElement) => boolean;
export declare const getFirstLevelElement: (elements: MindElement[]) => MindElement<import("@plait/mind").BaseData>[];
export declare const isChildRight: (parent: MindNode, child: MindNode) => boolean;
export declare const isChildUp: (parent: MindNode, child: MindNode) => boolean;
export declare const copyNewNode: (node: MindElement) => MindElement<import("@plait/mind").BaseData>;
export declare const insertMindElement: (board: PlaitMindBoard, inheritNode: MindElement, path: Path) => void;
export declare const findLastChild: (child: MindNode) => MindNode;
export declare const divideElementByParent: (elements: MindElement[]) => {
    parentElements: MindElement<import("@plait/mind").BaseData>[];
    abstractIncludedGroups: MindElement<import("@plait/mind").BaseData>[][];
};
export declare const getDefaultMindElementFontSize: (board: PlaitBoard, element: MindElement) => 18 | 14;

import { Point, RectangleClient } from '@plait/core';
import { MindNode } from '../interfaces/node';
import { LayoutDirection } from '../interfaces/layout';
import { PointPlacement } from '../interfaces/types';
export declare const getPointByPlacement: (client: RectangleClient, placement: PointPlacement) => Point;
export interface PlacementRef {
    placement: PointPlacement;
    client: RectangleClient;
}
export declare const getYDistanceBetweenPoint: (point1: Point, point2: Point, isHorizontalLayout: boolean) => void;
export declare const getLayoutDirection: (node: MindNode, isHorizontal: boolean) => LayoutDirection;
export declare const transformPlacement: (placement: PointPlacement, direction: LayoutDirection) => void;

import { MindElement } from '../../interfaces/element';
import { PlaitBoard, Point, Path } from '@plait/core';
import { DetectResult, MindNode } from '../../interfaces/node';
export declare const directionCorrector: (board: PlaitBoard, node: MindNode, detectResults: DetectResult[]) => DetectResult[] | null;
export declare const getAllowedDirection: (detectResults: DetectResult[], illegalDirections: DetectResult[]) => DetectResult[] | null;
export declare const detectDropTarget: (board: PlaitBoard, detectPoint: Point, dropTarget: {
    target: MindElement;
    detectResult: DetectResult;
} | null, activeElements: MindElement[]) => {
    target: MindElement;
    detectResult: DetectResult;
} | null;
export declare const directionDetector: (targetNode: MindNode, centerPoint: Point) => DetectResult[] | null;
export declare const isValidTarget: (origin: MindElement, target: MindElement) => boolean;
export declare const getPathByDropTarget: (board: PlaitBoard, dropTarget: {
    target: MindElement;
    detectResult: DetectResult;
}) => Path;

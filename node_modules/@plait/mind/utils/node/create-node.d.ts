import { PlaitBoard, Point } from '@plait/core';
import { MindLayoutType } from '@plait/layouts';
import { BranchShape, MindElement, MindElementShape } from '../../interfaces/element';
import { Element } from 'slate';
export declare const createEmptyMind: (board: PlaitBoard, point: Point) => MindElement<import("@plait/mind").BaseData>;
export declare const createMindElement: (text: string | Element, width: number, height: number, options: InheritAttribute) => MindElement<import("@plait/mind").BaseData>;
export interface InheritAttribute {
    fill?: string;
    strokeColor?: string;
    strokeWidth?: number;
    strokeStyle?: number;
    shape?: MindElementShape;
    layout?: MindLayoutType;
    branchColor?: string;
    branchWidth?: number;
    branchShape?: BranchShape;
}
export declare const INHERIT_ATTRIBUTE_KEYS: string[];

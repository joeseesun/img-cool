import { Point } from './point';
import { PlaitElementRef } from '../core/element/element-ref';
export interface PlaitElement {
    [key: string]: any;
    id: string;
    children?: PlaitElement[];
    points?: Point[];
    type?: string;
    groupId?: string;
    angle?: number;
}
export declare const PlaitElement: {
    isRootElement(value: PlaitElement): boolean;
    getElementRef<T extends PlaitElementRef = PlaitElementRef>(value: PlaitElement): T;
    getElementG(value: PlaitElement): SVGGElement;
    hasMounted(element: PlaitElement): boolean;
    getContainerG<T extends boolean>(value: PlaitElement, options: {
        suppressThrow: T;
    }): T extends true ? SVGGElement | null : SVGGElement;
};
export interface ComponentType<T> {
    new (...args: any[]): T;
}
export interface ImageEntry {
    url: string;
    file: File;
}

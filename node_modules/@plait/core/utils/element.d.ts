import { PlaitBoard, PlaitElement, RectangleClient } from '../interfaces';
export declare function getRectangleByElements(board: PlaitBoard, elements: PlaitElement[], recursion: boolean): RectangleClient;
export declare function getBoundingRectangleByElements(board: PlaitBoard, elements: PlaitElement[], recursion: boolean): RectangleClient;
export declare function getBoardRectangle(board: PlaitBoard): RectangleClient;
export declare function getElementById<T extends PlaitElement = PlaitElement>(board: PlaitBoard, id: string, dataSource?: PlaitElement[]): T | undefined;
export declare function getElementMap(board: PlaitBoard): Map<String, PlaitElement>;
export declare function findElements<T extends PlaitElement = PlaitElement>(board: PlaitBoard, options: {
    match: (element: PlaitElement) => boolean;
    recursion: (element: PlaitElement) => boolean;
    isReverse?: boolean;
}): T[];

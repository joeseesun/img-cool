import { PlaitElement } from '../interfaces';
export declare function isNullOrUndefined(value: any): boolean;
/**
 * get {x,y} point
 * @param point
 * @returns point
 */
export declare function normalizePoint(point: number[]): {
    x: number;
    y: number;
};
export declare const rgbaToHEX: (rgb: string, opacity: number) => string;
export declare function isContextmenu(event: MouseEvent): boolean;
export declare function uniqueById(elements: PlaitElement[]): any[];
export declare const findLastIndex: <T>(array: readonly T[], cb: (element: T, index: number, array: readonly T[]) => boolean, fromIndex?: number) => number;
export declare const findIndex: <T>(array: readonly T[], cb: (element: T, index: number, array: readonly T[]) => boolean, fromIndex?: number) => number;
export declare const isIndicesContinuous: (indexes: number[]) => boolean;

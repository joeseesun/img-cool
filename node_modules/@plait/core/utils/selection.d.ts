import { PlaitBoard, PlaitElement, PlaitGroup, WithSelectionPluginOptions } from '../interfaces';
export declare function isSelectionMoving(board: PlaitBoard): boolean;
export declare function setSelectionMoving(board: PlaitBoard): void;
export declare function clearSelectionMoving(board: PlaitBoard): void;
export declare function isHandleSelection(board: PlaitBoard): boolean;
export declare function hasSetSelectionOperation(board: PlaitBoard): boolean;
export declare function getTemporaryElements(board: PlaitBoard): PlaitElement[] | undefined;
export declare function getTemporaryRef(board: PlaitBoard): {
    elements: PlaitElement[];
    timeoutId: any;
} | undefined;
export declare function deleteTemporaryElements(board: PlaitBoard): void;
export declare function drawSelectionRectangleG(board: PlaitBoard): SVGGElement | null;
export declare function setSelectedElementsWithGroup(board: PlaitBoard, elements: PlaitElement[], isShift: boolean): void;
export declare function cacheSelectedElementsWithGroupOnShift(board: PlaitBoard, elements: PlaitElement[], isSelectGroupElement: boolean, elementsInHighestGroup: PlaitElement[]): void;
export declare function cacheSelectedElementsWithGroup(board: PlaitBoard, elements: PlaitElement[], isSelectGroupElement: boolean, hitElementGroups: PlaitGroup[]): void;
export declare const getSelectionOptions: (board: PlaitBoard) => WithSelectionPluginOptions;
export declare const setSelectionOptions: (board: PlaitBoard, options: Partial<WithSelectionPluginOptions>) => void;

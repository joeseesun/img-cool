import { RectangleClient } from '../interfaces';
import { PlaitBoard } from '../interfaces/board';
import { Point } from '../interfaces/point';
export declare const getViewBox: (board: PlaitBoard) => DOMRect;
/**
 * Get the screen point starting from the upper left corner of the svg element (based on the svg screen coordinate system)
 * reference: https://github.com/worktile/plait/blob/develop/packages/core/src/utils/to-point.md
 */
export declare function toHostPoint(board: PlaitBoard, x: number, y: number): Point;
export declare function toActiveRectangleFromViewBoxRectangle(board: PlaitBoard, rectangle: RectangleClient): RectangleClient;
export declare function toActivePointFromViewBoxPoint(board: PlaitBoard, point: Point): Point;
/**
 * Get the screen point starting from the upper left corner of the svg element (based on the svg screen coordinate system)
 */
export declare function toActivePoint(board: PlaitBoard, x: number, y: number): Point;
export declare function toScreenPointFromActivePoint(board: PlaitBoard, activePoint: Point): Point;
/**
 * Get the point in the coordinate system of the svg viewBox
 * reference: https://github.com/worktile/plait/blob/develop/packages/core/src/utils/to-point.md
 */
export declare function toViewBoxPoint(board: PlaitBoard, hostPoint: Point): Point;
export declare function toViewBoxPoints(board: PlaitBoard, hostPoints: Point[]): Point[];
/**
 * `toHostPoint` reverse processing
 * Get the screen point starting from the upper left corner of the browser window or the viewport (based on the screen coordinate system)
 */
export declare function toScreenPointFromHostPoint(board: PlaitBoard, hostPoint: Point): Point;
/**
 * `toViewBoxPoint` reverse processing
 */
export declare function toHostPointFromViewBoxPoint(board: PlaitBoard, viewBoxPoint: Point): Point;

import { ThemeColorMode } from '../interfaces/theme';
import { PlaitBoard } from '../interfaces/board';
import { Point } from '../interfaces/point';
import { FitViewportOptions } from '../interfaces/viewport';
import { PlaitPointerType } from '../interfaces/pointer';
declare function updateViewport(board: PlaitBoard, origination: Point, zoom?: number): void;
declare function updateZoom(board: PlaitBoard, newZoom: number, center?: Point): void;
declare function fitViewport(board: PlaitBoard): void;
declare function fitViewportWidth(board: PlaitBoard, options: FitViewportOptions): void;
/**
 * apply theme to every element (remove element custom properties)
 * invoke applyThemeColor
 */
declare function updateThemeColor(board: PlaitBoard, mode: ThemeColorMode): void;
declare function moveToCenter(board: PlaitBoard, centerPoint: Point): void;
export declare const BoardTransforms: {
    updatePointerType: <T extends string = PlaitPointerType>(board: PlaitBoard, pointer: T) => void;
    updateViewport: typeof updateViewport;
    fitViewport: typeof fitViewport;
    updateZoom: typeof updateZoom;
    updateThemeColor: typeof updateThemeColor;
    fitViewportWidth: typeof fitViewportWidth;
    moveToCenter: typeof moveToCenter;
};
export {};

/**
 * 基于 element-flavour 实现元素的绘制，取代 Angular 组件
 */
import { PlaitBoard, PlaitElement, PlaitPluginElementContext } from '../../interfaces';
import { ListRender } from '../list-render';
import { PlaitElementRef } from './element-ref';
export declare class ElementFlavour<T extends PlaitElement = PlaitElement, K extends PlaitBoard = PlaitBoard, R extends PlaitElementRef = PlaitElementRef> {
    private ref;
    private _g;
    private _containerG;
    private _rootContainerG?;
    initialized: boolean;
    protected _context: PlaitPluginElementContext<T, K>;
    get hasChildren(): boolean;
    set context(value: PlaitPluginElementContext<T, K>);
    get context(): PlaitPluginElementContext<T, K>;
    get element(): T;
    get board(): K;
    get selected(): boolean;
    listRender?: ListRender;
    getContainerG(): SVGGElement;
    getElementG(): SVGGElement;
    constructor(ref: R);
    initialize(): void;
    initializeListRender(): void;
    getRef(): R;
    private updateListRender;
    private initializeChildrenContext;
    destroy(): void;
}

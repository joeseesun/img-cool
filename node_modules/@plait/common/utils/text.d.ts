import { PlaitBoard, PlaitElement } from '@plait/core';
import { Editor, Element } from 'slate';
import { TextManage } from '../text/text-manage';
import { Alignment, CustomText } from '../text/types';
export interface TextInterface {
    getTextEditors: (board: PlaitBoard, elements?: PlaitElement[]) => Editor[] | undefined;
    findFirstTextEditor: (board: PlaitBoard) => null;
    getFirstTextEditor: (element: PlaitElement) => Editor;
    getTextEditorsByElement: (element: PlaitElement) => Editor[];
    getEditingTextEditor: (board: PlaitBoard, elements?: PlaitElement[]) => Editor | undefined;
}
export declare const getTextManages: (element: PlaitElement) => TextManage[];
export declare const getFirstTextManage: (element: PlaitElement) => TextManage;
export declare const getTextEditorsByElement: TextInterface['getTextEditorsByElement'];
export declare const getFirstTextEditor: TextInterface['getFirstTextEditor'];
export declare const findFirstTextEditor: TextInterface['findFirstTextEditor'];
export declare const getElementsText: (elements: PlaitElement[]) => string;
export declare const getTextEditors: TextInterface['getTextEditors'];
export declare const getEditingTextEditor: TextInterface['getEditingTextEditor'];
export declare const buildText: (text: string | Element, align?: Alignment, properties?: Partial<CustomText>) => import("slate").BaseElement | {
    children: {
        bold?: boolean | undefined;
        italic?: boolean | undefined;
        strike?: boolean | undefined;
        code?: boolean | undefined;
        text: string;
        underlined?: boolean | undefined;
        color?: string | undefined;
        "font-size"?: string | undefined;
    }[];
    type: string;
};
export declare const getLineHeightByFontSize: (fontSize: number) => number;

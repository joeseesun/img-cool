import { Direction, DirectionFactor, Point, PointOfRectangle, Vector } from '@plait/core';
export declare function getOppositeDirection(direction: Direction): Direction;
export declare function getDirectionByPointOfRectangle(point: PointOfRectangle): Direction | undefined;
/**
 * this function accepts vector parameter, the vector parameter vector is based on the screen coordinate system
 * vector[0] and vector[1] are the x and y components of the vector respectively.
 * if the vector has only one direction, the function returns a string in that direction, such as 'right', 'top', 'bottom' or 'left'.
 * if the vector has two directions, the function will return the string in which direction it is closer.
 */
export declare function getDirectionByVector(vector: Vector): Direction | null;
export declare function getDirectionBetweenPointAndPoint(source: Point, target: Point): Direction;
export declare function getDirectionFactor(direction: Direction): {
    x: number;
    y: number;
} | {
    x: number;
    y: number;
} | {
    x: number;
    y: number;
} | {
    x: number;
    y: number;
};
export declare function getDirectionFactorByDirectionComponent(directionComponent: number): DirectionFactor;

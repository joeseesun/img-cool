import { GeometryShapes, PlaitCustomGeometry, PlaitGeometry } from './geometry';
import { PlaitImage } from './image';
import { PlaitArrowLine } from './arrow-line';
import { PlaitSwimlane, SwimlaneSymbols } from './swimlane';
import { PlaitBaseTable, PlaitTable, TableSymbols } from './table';
import { PlaitText } from './text';
import { PlaitVectorLine } from './vector-line';
import { PlaitLine } from './line';
import { PlaitBoard } from '@plait/core';
export * from './arrow-line';
export * from './geometry';
export * from './text';
export * from './element';
export * from './engine';
export * from './swimlane';
export * from './table';
export * from './vector-line';
export * from './options';
export type PlaitDrawElement = PlaitGeometry | PlaitArrowLine | PlaitVectorLine | PlaitImage | PlaitBaseTable | PlaitSwimlane;
export type PlaitShapeElement = PlaitGeometry | PlaitImage | PlaitTable | PlaitSwimlane;
export type DrawShapes = GeometryShapes | TableSymbols | SwimlaneSymbols;
export declare const PlaitDrawElement: {
    isGeometry: (value: any) => value is PlaitGeometry;
    isArrowLine: (value: any) => value is PlaitArrowLine;
    isVectorLine: (value: any) => value is PlaitVectorLine;
    isLine: (value: any) => value is PlaitLine;
    isText: (value: any) => value is PlaitText;
    isImage: (value: any) => value is PlaitImage;
    isTable: (value: any) => value is PlaitTable;
    isDrawElement: (value: any) => value is PlaitDrawElement;
    isCustomGeometryElement: (board: PlaitBoard, value: any) => value is PlaitCustomGeometry;
    isShapeElement: (value: any) => value is PlaitShapeElement;
    isBasicShape: (value: any) => boolean;
    isFlowchart: (value: any) => boolean;
    isUML: (value: any) => boolean;
    isSwimlane: (value: any) => value is PlaitSwimlane;
    isVerticalSwimlane: (value: any) => boolean;
    isHorizontalSwimlane: (value: any) => boolean;
    isUMLClassOrInterface: (value: any) => boolean;
    isGeometryByTable: (value: any) => value is PlaitBaseTable;
    isElementByTable: (value: any) => value is PlaitBaseTable;
};

import { Point, PlaitBoard, RectangleClient } from '@plait/core';
import { ElbowLineRouteOptions } from '@plait/common';
import { ArrowLineHandleRefPair, PlaitArrowLine } from '../../interfaces';
export declare const isSelfLoop: (element: PlaitArrowLine) => boolean | "" | undefined;
export declare const isUseDefaultOrthogonalRoute: (element: PlaitArrowLine, options: ElbowLineRouteOptions) => boolean;
export declare const getElbowPoints: (board: PlaitBoard, element: PlaitArrowLine) => Point[];
export declare const getNextSourceAndTargetPoints: (board: PlaitBoard, element: PlaitArrowLine) => Point[];
export declare const getSourceAndTargetRectangle: (board: PlaitBoard, element: PlaitArrowLine, handleRefPair: ArrowLineHandleRefPair) => {
    sourceRectangle: RectangleClient;
    targetRectangle: RectangleClient;
};
export declare function getNextRenderPoints(board: PlaitBoard, element: PlaitArrowLine, renderPoints?: Point[]): Point[];

import { PlaitBoard, PlaitPluginElementContext, OnContextChanged } from '@plait/core';
import { PlaitCommonGeometry, PlaitMultipleTextGeometry } from './interfaces/geometry';
import { GeometryShapeGenerator } from './generators/geometry-shape.generator';
import { ActiveGenerator, CommonElementFlavour } from '@plait/common';
import { ArrowLineAutoCompleteGenerator } from './generators/arrow-line-auto-complete.generator';
import { TextGenerator } from './generators/text.generator';
import { SingleTextGenerator } from './generators/single-text.generator';
export declare class GeometryComponent extends CommonElementFlavour<PlaitCommonGeometry, PlaitBoard> implements OnContextChanged<PlaitCommonGeometry, PlaitBoard> {
    activeGenerator: ActiveGenerator<PlaitCommonGeometry>;
    lineAutoCompleteGenerator: ArrowLineAutoCompleteGenerator;
    shapeGenerator: GeometryShapeGenerator;
    textGenerator: TextGenerator<PlaitMultipleTextGeometry> | SingleTextGenerator;
    constructor();
    initializeGenerator(): void;
    initialize(): void;
    onContextChanged(value: PlaitPluginElementContext<PlaitCommonGeometry, PlaitBoard>, previous: PlaitPluginElementContext<PlaitCommonGeometry, PlaitBoard>): void;
    updateText(previousElement: PlaitCommonGeometry, currentElement: PlaitCommonGeometry): void;
    initializeTextManage(): void;
    destroy(): void;
}

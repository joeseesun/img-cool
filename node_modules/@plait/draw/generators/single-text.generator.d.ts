import { PlaitBoard, PlaitElement } from '@plait/core';
import { PlaitGeometry } from '../interfaces';
import { DrawTextInfo, TextGenerator, TextGeneratorOptions } from './text.generator';
import { ParagraphElement } from '@plait/common';
export declare class SingleTextGenerator<T extends PlaitElement = PlaitGeometry> extends TextGenerator<T> {
    get textManage(): import("@plait/common").TextManage;
    constructor(board: PlaitBoard, element: T, text: ParagraphElement, options: TextGeneratorOptions<T>);
    update(element: T, previousDrawShapeTexts: DrawTextInfo[], currentDrawShapeTexts: DrawTextInfo[], elementG: SVGElement): void;
    update(element: T, previousText: ParagraphElement, currentText: ParagraphElement, elementG: SVGElement): void;
}

import { PlaitBoard } from '@plait/core';
import { PlaitGeometry, PlaitShapeElement } from '../interfaces';
import { ActiveGeneratorExtraData, Generator } from '@plait/common';
export declare class ArrowLineAutoCompleteGenerator<T extends PlaitShapeElement = PlaitGeometry> extends Generator<T, ActiveGeneratorExtraData> {
    board: PlaitBoard;
    static key: string;
    autoCompleteG: SVGGElement;
    hoverElement: SVGGElement | null;
    constructor(board: PlaitBoard);
    canDraw(element: PlaitShapeElement, data: ActiveGeneratorExtraData): boolean;
    draw(element: T, data: ActiveGeneratorExtraData): SVGGElement;
    removeAutoCompleteG(index: number): void;
    recoverAutoCompleteG(): void;
}

import { Arrow, Line, Node, Text } from "../elementSkeleton.js";
import { ArrowLineShape, GeometryStyleOptions, PlaitArrowLine, PlaitCommonGeometry } from "@plait/draw";
import { DrawnixConfig } from "../index.js";
import { PlaitGroup } from "@plait/core";
export declare const transformToDrawnixLineElement: (element: Line, mermaidGroupIdToElementMap: Record<string, PlaitGroup>, config: DrawnixConfig) => PlaitArrowLine;
export declare const transformToDrawnixArrowElement: (element: Arrow, mermaidGroupIdToElementMap: Record<string, PlaitGroup>, config: DrawnixConfig & {
    arrowLineShape?: ArrowLineShape;
}) => PlaitArrowLine;
export declare const transformToDrawnixRectangleElement: (element: Exclude<Node, Line | Arrow | Text>, mermaidGroupIdToElementMap: Record<string, PlaitGroup>, config: DrawnixConfig) => import("@plait/draw").PlaitGeometry;
export declare const transformToDrawnixTextElement: (element: Text, mermaidGroupIdToElementMap: Record<string, PlaitGroup>, config: DrawnixConfig) => import("@plait/draw").PlaitGeometry;
export declare const transformToDrawnixGroupElement: (childrenElements: PlaitCommonGeometry[], text: string, options?: Partial<GeometryStyleOptions>) => {
    textElement: import("@plait/draw").PlaitGeometry;
    containerElement: import("@plait/draw").PlaitGeometry;
};

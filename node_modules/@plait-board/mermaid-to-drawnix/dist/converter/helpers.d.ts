import { SubGraph, Vertex } from "../interfaces.js";
import { Edge } from "../parser/flowchart.js";
import { Point, RectangleClient } from "@plait/core";
import { ArrowLineHandle, PlaitArrowLine, PlaitCommonGeometry, PlaitShapeElement } from "@plait/draw";
import { CustomText } from "@plait/common";
import { Container, Text } from "../elementSkeleton.js";
export declare const computeDrawnixArrowType: (mermaidArrowType: string) => {
    source: ArrowLineHandle;
    target: ArrowLineHandle;
};
export declare const computeDrawnixArrowStyle: (edge: Edge) => Partial<PlaitArrowLine>;
export declare const getText: (element: Vertex | Edge | SubGraph) => string;
/**
 * Compute style for vertex
 */
export declare const computeDrawnixVertexStyle: (style: Vertex["containerStyle"]) => Partial<PlaitCommonGeometry>;
/**
 * Compute style for label
 */
export declare const computeDrawnixTextStyle: (style: Vertex["labelStyle"]) => Partial<CustomText>;
export declare const getRectangleByMermaidElement: (vertex: Vertex | SubGraph | Container | Text) => RectangleClient;
export declare const normalizeText: (text: string) => string;
export declare const getHitConnectionFromConnectionPoint: (connectionPoint: Point, hitElement: PlaitShapeElement) => Point;
